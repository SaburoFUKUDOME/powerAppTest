screenCanvas As screen:
    OnVisible: |+
        =Set(navigationKey,0);
        Set(currentCategory,Blank());
        Set(_cAnswerList,'仮説構築支援ツール - 回答');
        //Set(pageKey,"canvas");
        Set(_gMaxSortNumber,First(Sort(Filter('仮説構築支援ツール - 追加の問い',themeID=themeId),sort_order,Descending)).sort_order);
        
        Set(
            _lNewLine,Char(10);
        );
        Set(
            _lIcon,"■";
        );
        Set(
            _lCustomer,"属性・背景";
        );
        Set(
            _lJTBD,"JTBD";
        );
        Set(
            _lHindranceFactor,"阻害要因";
        );
        Set(
            _lCurrentMeasures,"現状対策";
        );
        Set(
            _lSatisfaction,"満足状況";
        );
        Set(
            _lVP,"VP";
        );
        Set(
            _lMVP,"MVP";// キャンバスのタイトル
        );
        
        // コレクションを作成
        ClearCollect(colCustomer,Sort(Filter(_cAnswerList,And(themeID=themeId,category_ID=2)),questionID));
        ClearCollect(colJTBD,Sort(Filter(_cAnswerList,And(themeID=themeId,category_ID=3)),questionID));
        ClearCollect(colHindranceFactor,Sort(Filter(_cAnswerList,And(themeID=themeId,category_ID=4)),questionID));
        ClearCollect(colCurrentMeasures,Sort(Filter(_cAnswerList,And(themeID=themeId,category_ID=5)),questionID));
        ClearCollect(colSatisfaction,Sort(Filter(_cAnswerList,And(themeID=themeId,category_ID=6)),questionID));
        ClearCollect(colVP,Sort(Filter(_cAnswerList,And(themeID=themeId,category_ID=7)),questionID));
        ClearCollect(colMVP,Sort(Filter(_cAnswerList,And(themeID=themeId,category_ID=8)),questionID));
        
        // キャンバスのボックス内に表示する文字を作成(追加できるカテゴリは、ギャラリー内の各ラベルで作成する)
        Set(
            _lCustomerData,Concat(colCustomer,_lIcon&LookUp(questionList,ID=questionID).Title&_lNewLine&answer&_lNewLine&_lNewLine);// 属性・背景
        );
        Set(
            _lJTBDData,Concat(colJTBD,_lIcon&LookUp(questionList,ID=questionID).Title&_lNewLine&answer&_lNewLine&_lNewLine);// JTBD
        );
        Set(
            _lMVPData,Concat(colMVP,_lIcon&LookUp(questionList,ID=questionID).Title&_lNewLine&answer&_lNewLine&_lNewLine);// MVP
        );
        
        

    cmHeader_6 As cmHeader:

    HeaderContainer_3 As groupContainer.manualLayoutContainer:
        Height: =66
        Width: =MainContainer2.Width
        Y: =cmHeader_4.Height
        ZIndex: =2

        cmStatusBar_3 As cmStatusBar:
            checkStatus: |-
                =With({
                categoryQuestionCount:
                // 前提条件、顧客、目的、MVPの場合は、問の複数追加は無いのでそのままの件数をセットする
                If(Or(navigationKey=1,navigationKey=2,navigationKey=3,navigationKey=8),
                CountIf(questionList,category=navigationName),
                // それ以外の場合は、問の追加分かけた件数をセットする
                CountIf(questionList,category=navigationName)*_gMaxSortNumber),
                answerTable:Filter('仮説構築支援ツール - 回答',And(category=navigationName,themeID=themeId))},
                If(CountIf(answerTable,status=completeStatus)=categoryQuestionCount,10,
                CountIf(answerTable,(status=incompleteStatus)||(status=completeStatus))>noneStatus,
                2,1))
            X: =900

        lineContainer2_4 As groupContainer.verticalAutoLayoutContainer:
            Height: =66
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMode: =LayoutMode.Auto
            Width: =HeaderContainer_3.Width
            X: =30
            ZIndex: =1

            Label2_7 As label:
                FontWeight: =FontWeight.Bold
                Height: =44
                Overflow: =Overflow.Scroll
                Size: =16
                Text: =_gThemeName
                Width: =780
                X: =50
                Y: =461
                ZIndex: =1

            Rectangle3_6 As rectangle:
                BorderColor: =_cBaseColor
                Fill: =_cBaseColor
                Height: =4
                Width: =Max(App.Width-60, App.MinScreenWidth-60)
                X: =50
                Y: =505
                ZIndex: =2

        ContainerLink_3 As groupContainer.manualLayoutContainer:
            Height: =Parent.Height
            Width: =107
            X: =Rectangle3_3.Width-70
            ZIndex: =3

            Label1_4 As label:
                Height: =18
                Size: =8
                Text: ="共創活性化ポータル"
                Width: =107
                Y: =Icon4_2.Height
                ZIndex: =1

            Icon4_2 As icon.OpenInNewWindow:
                Color: =_cBaseColor
                Height: =25
                Icon: =Icon.OpenInNewWindow
                OnSelect: |-
                    =Launch("https://rfgricoh.sharepoint.com/sites/ZJS_cocreation_portal/SitePages/reference.aspx?OR=Teams-HL&CT=1665043619579&clickparams=eyJBcHBOYW1lIjoiVGVhbXMtRGVza3RvcCIsIkFwcFZlcnNpb24iOiIyNy8yMjA5MDQwMDcxMiIsIkhhc0ZlZGVyYXRlZFVzZXIiOmZhbHNlfQ%3D%3D#psf%E3%82%AD%E3%83%A3%E3%83%B3%E3%83%90%E3%82%B9%E4%BA%8B%E4%BE%8B%E9%9B%86")
                Tooltip: ="別タブで共創活性化ポータルを開く"
                Width: =30
                X: =39
                Y: =2
                ZIndex: =3

    cmHome_3 As cmHome_2:
        moveQuestion: |-
            =If(
                addAnswerFlag,
                Set(
                    addAnswer,
                    true
                );
                Set(
                    addAnswerId,
                    addAnswerId
                ),
                Set(
                    addAnswerId,
                    0
                )
            );
            
            
            //問いへ遷移
            Set(
                navigationKey,
                qid
            );
            Set(
                questionKey,
                qid
            );
            With({getAnswerRecord:LookUp('仮説構築支援ツール - 回答',And(themeID=themeId,questionID=questionKey,add_answerID=addAnswerId))},
            Reset(textAnswer);
            Reset(skipAnswerCheckbox);
            Reset(noAnswerCheckbox);
            Set(
                currentAnswer,
                If(IsBlank(getAnswerRecord),"",getAnswerRecord.answer)
                );
            Set(
                skipFlag,
                getAnswerRecord.skip_flag
                );
            Set(
                noAnswerFlag,
                getAnswerRecord.no_answer_flag
                );
            );
            
            With({qRecord:LookUp(questionList, ID=questionKey)},
            Set(
                currentTitle,
                qRecord.Title
            );
            Set(
                currentQuestion,
                qRecord.question_content
            );
            Set(currentCategory,qRecord.category_ID);
            Set(
                controlType,
                qRecord.control_type
            );
            Set(
                currentPage,
                qRecord.current_question_number
            );
            Set(
                totalPage,
                qRecord.question_totalnumber
            );
            Set(
                commentary,
                qRecord.commentary
            );
            Set(
                example,
                qRecord.example
            );
            Set(
                currentRequired,
                qRecord.required
            );
            Set(
                nextVisible,
                If(qRecord.next_question_id=0,false,true)
            
            );
            Set(
                confirmVisible,
                If(qRecord.next_question_id=0,true,false)
            );
            );
            Set(
                backVisible,
                false
            );
            Set(
                commentaryGroupVisible,
                true
            );
            Set(
                exampleGroupVisible,
                false
            );
            If(Not(currentRequired="2"),Set(currentQuestion,Concatenate(currentQuestion,"*")));
            Navigate(
                scrennQuestion,
                ScreenTransition.Fade
            );
        Y: =128
        ZIndex: =3

    ContainerDialogMain As groupContainer.manualLayoutContainer:
        Height: =Max(App.Height, App.MinScreenHeight)
        Visible: =_gIsShowDialog
        Width: =Max(App.Width, App.MinScreenWidth)
        ZIndex: =4

        RectangleBack1_8 As rectangle:
            BorderColor: =RGBA(0, 0, 0, 1)
            Fill: =RGBA(0, 0, 0, 0.2)
            FocusedBorderThickness: =0
            Height: =Parent.Height
            Width: =Parent.Width
            ZIndex: =1

        RectangleDialog_6 As rectangle:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderThickness: =1
            Fill: =RGBA(255, 255, 255, 1)
            FocusedBorderThickness: =1
            Height: =Parent.Height*90%
            Width: =Parent.Width*90%
            X: =(Parent.Width/2)-(Self.Width/2)
            Y: =(Parent.Height/2)-(Self.Height/2)
            ZIndex: =2

        LabelDialgoTitle As label:
            Align: =Center
            FontWeight: =Semibold
            Size: =18
            Text: =_lDialogTitle
            Width: =863
            X: =252
            Y: =50
            ZIndex: =4

        LabelDialogData As label:
            Height: =RectangleDialog_6.Height-100
            Overflow: =Overflow.Scroll
            Size: =11
            Text: =_lDialogData
            Width: =RectangleDialog_6.Width-50
            X: =93
            Y: =110
            ZIndex: =7

        IconDialogClose As icon.Cancel:
            Color: =_cBaseColor
            Height: =30
            Icon: =Icon.Cancel
            OnSelect: =Set(_gIsShowDialog,false);
            Tooltip: ="ダイアログを閉じる"
            Width: =30
            X: =1253
            Y: =50
            ZIndex: =8

    GroupDeleteConfirm_2 As group:
        Height: =5
        Width: =5
        X: =20
        Y: =20
        ZIndex: =11

        RectangleBack1_4 As rectangle:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderThickness: =1
            Fill: =RGBA(0, 0, 0, 0.2)
            Height: =Max(App.Height, App.MinScreenHeight)
            Visible: =If(_gIsDelete,true,false)
            Width: =Max(App.Width, App.MinScreenWidth)
            ZIndex: =5

        RectangleDialog_2 As rectangle:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderThickness: =
            Fill: =RGBA(255, 255, 255, 1)
            FocusedBorderThickness: =0
            Height: =270
            Visible: =If(_gIsDelete,true,false)
            Width: =500
            X: =(App.Width/2)-(Self.Width/2)
            Y: =RectangleBack1_4.Height/3
            ZIndex: =6

        LabelConfirmMessage_2 As label:
            Align: =Left
            Color: =RGBA(116, 116, 116, 1)
            FontWeight: =Normal
            Height: =103
            Size: =12
            Text: |-
                ="色が付いた行を削除します。
                この行を削除すると登録した回答も削除されます。
                この操作を元に戻すことはできません。
                続行しますか？"
            Visible: =If(_gIsDelete,true,false)
            Width: =470
            X: =443
            Y: =336
            ZIndex: =7

        ButtonDelete_2 As button:
            BorderThickness: =0
            Fill: =RGBA(203, 102, 102, 1)
            FocusedBorderThickness: =0
            Height: =35
            HoverFill: =ColorFade(Self.Fill,-20%)
            OnSelect: |-
                =With({answerRecord:Filter('仮説構築支援ツール - 回答',add_answerID=_gDeleteId)},
                If(
                    Not(IsBlank(answerRecord)),
                    Remove('仮説構築支援ツール - 回答',answerRecord);
                );
                );
                Remove('仮説構築支援ツール - 追加の問い',LookUp('仮説構築支援ツール - 追加の問い',ID=_gDeleteId));
                UpdateIf('仮説構築支援ツール - 追加の問い',And(themeID=themeId,sort_order>_gDeleteSortOrder),{sort_order:sort_order-1});
                Set(_gIsDelete,false);
                Set(_gMaxSortNumber,_gMaxSortNumber-1);
            RadiusBottomLeft: =5
            RadiusBottomRight: =5
            RadiusTopLeft: =5
            RadiusTopRight: =5
            Size: =14
            Text: ="削除"
            Visible: =If(_gIsDelete,true,false)
            Width: =100
            X: =692
            Y: =470
            ZIndex: =8

        ButtonCancel_2 As button:
            BorderThickness: =1
            Color: =RGBA(0, 0, 0, 1)
            Fill: =RGBA(255, 255, 255, 1)
            FocusedBorderThickness: =1
            Height: =35
            HoverColor: =RGBA(0, 0, 0, 1)
            HoverFill: =ColorFade(Self.Fill, -20%)
            OnSelect: =Set(_gIsDelete,false)
            RadiusBottomLeft: =5
            RadiusBottomRight: =5
            RadiusTopLeft: =5
            RadiusTopRight: =5
            Size: =12
            Text: ="キャンセル"
            Visible: =If(_gIsDelete,true,false)
            Width: =100
            X: =817
            Y: =470
            ZIndex: =9

        LabelDeleteTitle_2 As label:
            Align: =Left
            Color: =RGBA(0, 13, 75, 1)
            FontWeight: =FontWeight.Semibold
            Height: =70
            Size: =20
            Text: |-
                ="行を削除しますか？
                "
            Visible: =If(_gIsDelete,true,false)
            Width: =425
            X: =443
            Y: =270
            ZIndex: =10

