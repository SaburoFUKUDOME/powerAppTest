cmQuestionButton As CanvasComponent:
    getStatus(answerContent As String, nowSkipFlag As Boolean, nowNoAnswerFlag As Boolean):
        answerContent:
            Default: ="テキスト"
        nowSkipFlag:
            Default: =true
        nowNoAnswerFlag:
            Default: =true
        ThisProperty:
            Default: =
    setQuestionValue(qId As Number, buttonKey As String):
        qId:
            Default: =100
        buttonKey:
            Default: ="テキスト"
        ThisProperty:
            Default: |+
                =With({qRecord:LookUp(questionList, ID=qId)},
                Set(
                    currentTitle,
                    qRecord.Title
                );
                Set(
                    currentQuestion,
                    qRecord.question_content
                );
                
                Set(
                    currentPage,
                    qRecord.current_question_number
                );
                Set(
                    totalPage,
                    qRecord.question_totalnumber
                );
                Set(
                    commentary,
                    qRecord.commentary
                );
                Set(
                    example,
                    qRecord.example
                );
                Set(
                    controlType,
                    qRecord.control_type
                );
                Set(
                    currentRequired,
                    qRecord.required
                );
                Set(currentCategory,qRecord.category);
                
                If(buttonKey="next",
                //次へボタンの場合
                Set(
                    nextVisible,
                    If(qRecord.next_question_id=0,false,true)
                );
                Set(
                    backVisible,
                    true
                );,
                //戻るボタンの場合
                Set(
                    nextVisible,
                    true
                );
                Set(
                    backVisible,
                     If(qRecord.back_question_id=0,false,true)
                ););
                
                Set(
                    confirmVisible,
                    If(qRecord.next_question_id=0,true,false)
                );
                
                With({getAnswerRecord:LookUp('仮説構築支援ツール - 回答',And(themeID=themeId,questionID=qId))},
                Reset(textAnswer);
                Reset(skipAnswerCheckbox);
                Reset(noAnswerCheckbox);
                Set(
                    currentAnswer,
                    If(IsBlank(getAnswerRecord),"",getAnswerRecord.answer)
                    );
                Set(
                    skipFlag,
                    getAnswerRecord.skip_flag
                    );
                Set(
                    noAnswerFlag,
                    getAnswerRecord.no_answer_flag
                    );
                );
                 
                
                Set(questionKey,qId);
                Set(
                    commentaryGroupVisible,
                    true
                );
                Set(
                    exampleGroupVisible,
                    false
                );
                If(Not(currentRequired="2"),Set(currentQuestion,Concatenate(currentQuestion,"*")))
                )
                
    Fill: =RGBA(0, 0, 0, 0)
    Height: =50
    updateAnswer: |-
        =If(
            controlType = "text",
            Set(
                answerContent,
                textAnswer.Text
            ),
            Set(
                answerContent,
                Radio1.Selected.Result
            )
        );
        With(
            {
                getAnswerRecord: LookUp(
                    '仮説構築支援ツール - 回答',
                    And(
                        themeID = themeId,
                        questionID = questionKey
                    )
                )
            },
            If(
                Not(
                    And(
                        If(IsBlank(currentAnswer),IsBlank(answerContent)=IsBlank(currentAnswer),answerContent=currentAnswer),
                        skipFlag = skipAnswerCheckbox.Value,
                        noAnswerFlag = noAnswerCheckbox.Value
                    )
                ),
                If(
                    IsBlank(getAnswerRecord),
                    Patch(
                        '仮説構築支援ツール - 回答',
                        Defaults('仮説構築支援ツール - 回答'),
                        {
                            themeID: themeId,
                            questionID: questionKey,
                            category: currentCategory,
                            answer: answerContent,
                            skip_flag: skipAnswerCheckbox.Value,
                            no_answer_flag: noAnswerCheckbox.Value,
                            status: If(
                                skipAnswerCheckbox.Value,
                                incompleteStatus,
                                !IsBlank(answerContent),
                                completeStatus,
                                And(
                                    currentRequired = "2",
                                    noAnswerCheckbox.Value
                                ),
                                completeStatus,
                                noneStatus
                            )
                        }
                    );
                    ,
                    Patch(
                        '仮説構築支援ツール - 回答',
                        getAnswerRecord,
                        {
                            answer: answerContent,
                            skip_flag: skipAnswerCheckbox.Value,
                            no_answer_flag: noAnswerCheckbox.Value,
                            status: If(
                                skipAnswerCheckbox.Value,
                                incompleteStatus,
                                !IsBlank(answerContent),
                                completeStatus,
                                And(
                                    currentRequired = "2",
                                    noAnswerCheckbox.Value
                                ),
                                completeStatus,
                                noneStatus
                            )
                        }
                    );
                )
            );
        )
    Width: =640
    X: =0
    Y: =0
    ZIndex: =2

    qButtonGroup As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =4

        backButton As button:
            BorderColor: =_cBaseColor
            BorderStyle: =BorderStyle.None
            DisabledBorderColor: =_cBaseColor
            DisabledColor: =_cBaseColor
            DisabledFill: =_cBaseColor
            Fill: =_cBaseColor
            Height: =35
            HoverBorderColor: =ColorFade(_cBaseColor, 20%)
            HoverFill: =ColorFade(_cBaseColor,-20%)
            OnSelect: |
                =cmQuestionButton.updateAnswer();
                cmQuestionButton.setQuestionValue(LookUp(questionList, ID=questionKey).back_question_id,"back");
            RadiusBottomLeft: =20
            RadiusBottomRight: =20
            RadiusTopLeft: =20
            RadiusTopRight: =20
            Size: =14
            Text: ="　↑　戻る"
            Visible: =backVisible
            X: =230
            Y: =8
            ZIndex: =1

        nextButton As button:
            BorderColor: =_cBaseColor
            BorderStyle: =BorderStyle.None
            DisabledBorderColor: =_cBaseColor
            DisabledColor: =_cBaseColor
            DisabledFill: =_cBaseColor
            Fill: =_cBaseColor
            Height: =backButton.Height
            HoverBorderColor: =ColorFade(_cBaseColor, 20%)
            HoverFill: =ColorFade(_cBaseColor,-20%)
            OnSelect: |-
                =cmQuestionButton.updateAnswer();
                cmQuestionButton.setQuestionValue(LookUp(questionList, ID=questionKey).next_question_id,"next");
            RadiusBottomLeft: =20
            RadiusBottomRight: =20
            RadiusTopLeft: =20
            RadiusTopRight: =20
            Size: =14
            Text: ="　↓　次へ"
            Visible: =nextVisible
            Width: =backButton.Width
            X: =436
            Y: =backButton.Y
            ZIndex: =2

        confirmButton As button:
            BorderColor: =_cBaseColor
            BorderStyle: =BorderStyle.None
            DisabledBorderColor: =_cBaseColor
            DisabledColor: =_cBaseColor
            DisabledFill: =_cBaseColor
            Fill: =_cBaseColor
            Height: =nextButton.Height
            HoverBorderColor: =ColorFade(_cBaseColor, 20%)
            HoverFill: =ColorFade(_cBaseColor,-20%)
            OnSelect: |
                =
                //　更新処理する
                cmQuestionButton.updateAnswer();
                Navigate(
                    screenCanvas,
                    ScreenTransition.Fade
                );
            RadiusBottomLeft: =20
            RadiusBottomRight: =20
            RadiusTopLeft: =20
            RadiusTopRight: =20
            Size: =14
            Text: ="確定"
            Visible: =confirmVisible
            Width: =nextButton.Width
            X: =nextButton.X
            Y: =nextButton.Y
            ZIndex: =3

