questionButtonComponent As CanvasComponent:
    setQuestionValue(qId As Number, buttonKey As String):
        qId:
            Default: =100
        buttonKey:
            Default: ="テキスト"
        ThisProperty:
            Default: |+
                =With({qRecord:LookUp('仮想構築支援ツール - 問い', ID=qId)},
                Set(
                    currentTitle,
                    qRecord.Title
                );
                Set(
                    currentQuestion,
                    qRecord.question_content
                );
                
                Set(
                    currentPage,
                    qRecord.current_question_number
                );
                Set(
                    totalPage,
                    qRecord.question_totalnumber
                );
                Set(
                    commentary,
                    qRecord.commentary
                );
                Set(
                    example,
                    qRecord.example
                );
                Set(
                    controlType,
                    qRecord.control_type
                );
                If(buttonKey="next",
                //次へボタンの場合
                Set(
                    nextVisible,
                    If(qRecord.next_question_id=0,false,true)
                );
                Set(
                    buckVisible,
                    true
                );,
                //戻るボタンの場合
                Set(
                    nextVisible,
                    true
                );
                Set(
                    buckVisible,
                     If(qRecord.back_question_id=0,false,true)
                ););
                
                Set(
                    confirmVisible,
                    If(qRecord.next_question_id=0,true,false)
                );
                
                With({getAnswerRecord:LookUp('仮説構築支援ツール - 回答',And(themeID=themeId,questionID=questionKey))},
                Set(
                    currentAnswer,
                    If(IsBlank(getAnswerRecord),"",getAnswerRecord.answer)
                    );
                );
                 
                
                
                Set(questionKey,qId);
                Set(
                    commentaryGroupVisible,
                    true
                );
                Set(
                    exampleGroupVisible,
                    false
                );
                )
                
    Fill: =RGBA(0, 0, 0, 0)
    Height: =50
    updateAnswer: |-
        =// ラジオボタンの場合の値を取得する処理を追加する必要有★★
        If(Not(textAnswer.Text=currentAnswer),
        With({getAnswerRecord:LookUp('仮説構築支援ツール - 回答',And(themeID=themeId,questionID=questionKey))},
        //Set(getAnswerRecord,getAnswerRecord); ビューの変数から値が確認できる★★
        If(IsBlank(getAnswerRecord),
        Patch('仮説構築支援ツール - 回答', Defaults('仮説構築支援ツール - 回答'),{themeID:themeId,questionID:questionKey, answer: textAnswer.Text });,
        Patch('仮説構築支援ツール - 回答', getAnswerRecord,{ answer: textAnswer.Text });
        )));
    Width: =640
    X: =0
    Y: =0
    ZIndex: =2

    qButtonGroup As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =4

        backButton As button:
            BorderColor: =baseColor
            BorderStyle: =BorderStyle.None
            DisabledBorderColor: =baseColor
            DisabledColor: =baseColor
            DisabledFill: =baseColor
            Fill: =baseColor
            Height: =35
            HoverBorderColor: =ColorFade(baseColor, 20%)
            HoverFill: =ColorFade(baseColor,-20%)
            OnSelect: |-
                =questionButtonComponent.updateAnswer();
                questionButtonComponent.setQuestionValue(LookUp('仮想構築支援ツール - 問い', ID=questionKey).back_question_id,"back");
                /**
                Set(backKey,LookUp('仮想構築支援ツール - 問い', ID=questionKey).back_question_id);
                With({qRecord:LookUp('仮想構築支援ツール - 問い', ID=backKey)},
                
                Set(
                    currentTitle,
                    qRecord.Title
                );
                Set(
                    currentQuestion,
                    qRecord.question_content
                );
                Set(
                    // 次の回答はどうやって取得するか検討する
                    currentAnswer,
                    galleryTheme.Selected.id1_answer
                );
                Set(
                    currentPage,
                    qRecord.current_question_number
                );
                Set(
                    totalPage,
                    qRecord.question_totalnumber
                );
                Set(
                    commentary,
                    qRecord.commentary
                );
                Set(
                    example,
                    qRecord.example
                );
                Set(
                    nextVisible,
                    true
                );
                Set(
                    buckVisible,
                     If(qRecord.back_question_id=0,false,true)
                );
                Set(
                    commentaryGroupVisible,
                    true
                );
                Set(
                    exampleGroupVisible,
                    false
                );
                Set(questionKey,backKey);
                )
                */
            RadiusBottomLeft: =20
            RadiusBottomRight: =20
            RadiusTopLeft: =20
            RadiusTopRight: =20
            Size: =14
            Text: ="　↑　戻る"
            Visible: =buckVisible
            X: =230
            Y: =8
            ZIndex: =1

        nextButton As button:
            BorderColor: =baseColor
            BorderStyle: =BorderStyle.None
            DisabledBorderColor: =baseColor
            DisabledColor: =baseColor
            DisabledFill: =baseColor
            Fill: =baseColor
            Height: =backButton.Height
            HoverBorderColor: =ColorFade(baseColor, 20%)
            HoverFill: =ColorFade(baseColor,-20%)
            OnSelect: |-
                =questionButtonComponent.updateAnswer();
                questionButtonComponent.setQuestionValue(LookUp('仮想構築支援ツール - 問い', ID=questionKey).next_question_id,"next");
                /**
                Set(nextKey,LookUp('仮想構築支援ツール - 問い', ID=questionKey).next_question_id);
                
                With({qRecord:LookUp('仮想構築支援ツール - 問い', ID=nextKey)},
                Set(
                    currentTitle,
                    qRecord.Title
                );
                Set(
                    currentQuestion,
                    qRecord.question_content
                );
                
                Set(
                    currentPage,
                    qRecord.current_question_number
                );
                Set(
                    totalPage,
                    qRecord.question_totalnumber
                );
                Set(
                    commentary,
                    qRecord.commentary
                );
                Set(
                    example,
                    qRecord.example
                );
                Set(
                    nextVisible,
                    If(qRecord.next_question_id=0,false,true)
                );
                Set(
                    buckVisible,
                    true
                );
                Set(
                    // 次の回答はどうやって取得するか検討する
                    currentAnswer,
                    galleryTheme.Selected.id1_answer
                );
                Set(questionKey,nextKey);
                Set(
                    commentaryGroupVisible,
                    true
                );
                Set(
                    exampleGroupVisible,
                    false
                );
                )
                
                */
            RadiusBottomLeft: =20
            RadiusBottomRight: =20
            RadiusTopLeft: =20
            RadiusTopRight: =20
            Size: =14
            Text: ="　↓　次へ"
            Visible: =nextVisible
            Width: =backButton.Width
            X: =436
            Y: =7
            ZIndex: =2

        confirmButton As button:
            BorderColor: =baseColor
            BorderStyle: =BorderStyle.None
            DisabledBorderColor: =baseColor
            DisabledColor: =baseColor
            DisabledFill: =baseColor
            Fill: =baseColor
            Height: =nextButton.Height
            HoverBorderColor: =ColorFade(baseColor, 20%)
            HoverFill: =ColorFade(baseColor,-20%)
            OnSelect: |-
                =//　更新処理する
                questionButtonComponent.updateAnswer();
                Navigate(screenCanvas,ScreenTransition.Fade);
            RadiusBottomLeft: =20
            RadiusBottomRight: =20
            RadiusTopLeft: =20
            RadiusTopRight: =20
            Size: =14
            Text: ="確定"
            Visible: =confirmVisible
            Width: =nextButton.Width
            X: =nextButton.X
            Y: =7
            ZIndex: =3

